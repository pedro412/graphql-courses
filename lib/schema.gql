type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  "returns all courses"
  getCourses: [Course]
  "return single course"
  getCourse(id: ID!): Course
  "returns all Students"
  getStudents: [Student]
  "return single Student"
  getStudent(id: ID!): Student
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  name: String
  email: String
}

type Deleted { 
  acknowledged: Boolean
  deletedCount: String
}

type Mutation {
  "create a single course"
  createCourse(input: CourseInput!): Course
  "edit a course"
  editCourse(_id: ID!, input: CourseEditInput): Course
  "create a single Student"
  createStudent(input: StudentInput!): Student
  "edit a student"
  editStudent(_id: ID!, input: StudentEditInput): Student
  "delete a course"
  deleteCourse(_id: ID!): Deleted
}
